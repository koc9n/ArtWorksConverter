version: '3.8'
services:
  nginx:
    image: ${REGISTRY:-localhost}/mp4-to-gif-nginx:${TAG:-latest}
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
    networks:
      - app-network
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/conf.d/upload.conf:/etc/nginx/conf.d/upload.conf:ro
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s

  client:
    image: ${REGISTRY:-localhost}/mp4-to-gif-client:${TAG:-latest}
    build:
      context: ./client
      dockerfile: Dockerfile
    networks:
      - app-network
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s

  api:
    image: ${REGISTRY:-localhost}/mp4-to-gif-api:${TAG:-latest}
    build:
      context: ./api
      dockerfile: Dockerfile
    networks:
      - app-network
    environment:
      - NODE_ENV=production
      - REDIS_URL=redis://redis:6379
    volumes:
      - shared-storage:/app/shared
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s
      resources:
        limits:
          cpus: '0.50'
          memory: 512M

  worker:
    image: ${REGISTRY:-localhost}/mp4-to-gif-worker:${TAG:-latest}
    build:
      context: ./worker
      dockerfile: Dockerfile
    networks:
      - app-network
    environment:
      - NODE_ENV=production
      - REDIS_URL=redis://redis:6379
    volumes:
      - shared-storage:/app/shared
    deploy:
      replicas: 5
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 2
        delay: 10s
      resources:
        limits:
          cpus: '0.75'
          memory: 1G

  redis:
    image: redis:alpine
    networks:
      - app-network
    command: redis-server --save "" --appendonly no
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s
      resources:
        limits:
          memory: 256M

networks:
  app-network:
    driver: overlay

volumes:
  shared-storage:
    driver: local 